{
    "openapi": "3.0.3",
    "info": {
        "title": "OneOnOne Api",
        "version": "1.0.0",
        "description": "Backend api for OneOnOne meeting application"
    },
    "paths": {
        "/auth/login/": {
            "post": {
                "operationId": "auth_login_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/refresh/": {
            "post": {
                "operationId": "auth_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/register/": {
            "post": {
                "operationId": "auth_register_create",
                "description": "Register a new user",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    }
                }
            }
        },
        "/calendars/": {
            "get": {
                "operationId": "calendars_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCalendarList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "calendars_create",
                "tags": [
                    "calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalendarCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CalendarCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CalendarCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalendarCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/calendars/{calendar_id}/day/{day_id}/timeslot/": {
            "get": {
                "operationId": "calendars_day_timeslot_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "day_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTimeSlotList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "calendars_day_timeslot_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "day_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSlot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSlot"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSlot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSlot"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/calendars/{calendar_id}/day/{day_id}/timeslot/{id}/": {
            "get": {
                "operationId": "calendars_day_timeslot_retrieve",
                "description": "Retrieve a time slot",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "day_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSlot"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "calendars_day_timeslot_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "day_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSlot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSlot"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSlot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSlot"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "calendars_day_timeslot_destroy",
                "description": "Delete a time slot",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "day_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSlot"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/calendars/{calendar_id}/invitations/": {
            "get": {
                "operationId": "calendars_invitations_list",
                "description": "Retrieve all invitations for a calendar",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedInvitationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "calendars_invitations_create",
                "description": "Create an invitation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvitationCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/InvitationCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InvitationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/calendars/{calendar_id}/invitations/{id}/": {
            "get": {
                "operationId": "calendars_invitations_retrieve",
                "description": "Retrieve an invitation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "calendars_invitations_update",
                "description": "Update an invitation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvitationEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/InvitationEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InvitationEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvitationEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "calendars_invitations_destroy",
                "description": "Delete an invitation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/calendars/{id}/": {
            "get": {
                "operationId": "calendars_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Calendar"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "calendars_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalendarEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CalendarEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CalendarEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalendarEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "calendars_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "calendars"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/contacts/": {
            "get": {
                "operationId": "contacts_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContactList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contacts_create",
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/contacts/{id}/": {
            "get": {
                "operationId": "contacts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contacts_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contacts_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContact"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contacts_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/contacts/accept/": {
            "post": {
                "operationId": "contacts_accept_create",
                "description": "Accept an incoming pending friend request from another user.",
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/contacts/add/": {
            "post": {
                "operationId": "contacts_add_create",
                "description": "Add a new contact to the user's contact list.\nThe user to be added is specified by their username.\nThe user cannot add themselves.\nIf the contact already exists, the request will be rejected.\nIf the contact is blocked, the request will be rejected.\nIf the user is not found, the request will be rejected.\nIf the user is found, the request will be accepted and the contact will be added to the user's contact list with a status of pending.",
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/contacts/block/": {
            "post": {
                "operationId": "contacts_block_create",
                "description": "Current user blocks another user.",
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/contacts/friends/": {
            "get": {
                "operationId": "contacts_friends_retrieve",
                "description": "Get a list of all friends of the current user.",
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/contacts/incoming/": {
            "get": {
                "operationId": "contacts_incoming_retrieve",
                "description": "Get a list of all incoming pending friend requests for the current user.",
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/contacts/outgoing/": {
            "get": {
                "operationId": "contacts_outgoing_retrieve",
                "description": "Get a list of all outgoing pending friend requests for the current user.",
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/contacts/reject/": {
            "post": {
                "operationId": "contacts_reject_create",
                "description": "Reject an incoming pending friend request from another user.",
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/contacts/search/": {
            "get": {
                "operationId": "contacts_search_retrieve",
                "description": "Get list of all people other than the current user.",
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/contacts/unadd/": {
            "post": {
                "operationId": "contacts_unadd_create",
                "description": "Current user unadds an existing blocked user.",
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/contacts/unblock/": {
            "post": {
                "operationId": "contacts_unblock_create",
                "description": "Current user unblocks an existing blocked user.",
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Calendar": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "creator_username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string"
                    },
                    "days": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Day"
                        }
                    },
                    "participants": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "creator_username",
                    "days",
                    "description",
                    "id",
                    "title"
                ]
            },
            "CalendarCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string"
                    },
                    "days": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Day"
                        }
                    }
                },
                "required": [
                    "days",
                    "description",
                    "id",
                    "title"
                ]
            },
            "CalendarEdit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string"
                    },
                    "days": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Day"
                        }
                    }
                },
                "required": [
                    "days",
                    "description",
                    "id",
                    "title"
                ]
            },
            "Contact": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "userA": {
                        "type": "integer"
                    },
                    "userB": {
                        "type": "integer"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContactStatusEnum"
                            }
                        ],
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807
                    }
                },
                "required": [
                    "id",
                    "status",
                    "userA",
                    "userB"
                ]
            },
            "ContactStatusEnum": {
                "enum": [
                    1,
                    2,
                    3,
                    4
                ],
                "type": "integer",
                "description": "* `1` - Friends\n* `2` - Pending\n* `3` - Rejected\n* `4` - Blocked"
            },
            "Day": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "ranking": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64"
                    },
                    "timeslots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TimeSlot"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "date",
                    "id",
                    "ranking",
                    "timeslots"
                ]
            },
            "Invitation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "calendar_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "invitee_username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "inviter_username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InvitationStatusEnum"
                            }
                        ],
                        "default": "pending"
                    }
                },
                "required": [
                    "calendar_id",
                    "id",
                    "invitee_username",
                    "inviter_username"
                ]
            },
            "InvitationCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "invitee_username": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "invitee_username"
                ]
            },
            "InvitationEdit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/InvitationEditStatusEnum"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "InvitationEditStatusEnum": {
                "enum": [
                    "pending",
                    "accepted",
                    "rejected"
                ],
                "type": "string",
                "description": "* `pending` - Pending\n* `accepted` - Accepted\n* `rejected` - Rejected"
            },
            "InvitationStatusEnum": {
                "enum": [
                    "pending",
                    "accepted",
                    "rejected"
                ],
                "type": "string",
                "description": "* `pending` - pending\n* `accepted` - accepted\n* `rejected` - rejected"
            },
            "PaginatedCalendarList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Calendar"
                        }
                    }
                }
            },
            "PaginatedContactList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        }
                    }
                }
            },
            "PaginatedInvitationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invitation"
                        }
                    }
                }
            },
            "PaginatedTimeSlotList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TimeSlot"
                        }
                    }
                }
            },
            "PatchedContact": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "userA": {
                        "type": "integer"
                    },
                    "userB": {
                        "type": "integer"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContactStatusEnum"
                            }
                        ],
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807
                    }
                }
            },
            "TimeSlot": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "owner_username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time"
                    }
                },
                "required": [
                    "end_time",
                    "id",
                    "owner_username",
                    "start_time"
                ]
            },
            "TokenObtainPair": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "password",
                    "refresh",
                    "username"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password2": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "password",
                    "password2",
                    "username"
                ]
            }
        },
        "securitySchemes": {
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}